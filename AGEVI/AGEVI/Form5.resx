<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/4QAuRXhpZgAATU0AKgAAAAgAAkAAAAMAAAABAGoAAEABAAEAAAAB
        AAAAAAAAAAD/2wBDAAsJCQcJCQcJCQkJCwkJCQkJCQsJCwsMCwsLDA0QDBEODQ4MEhkSJRodJR0ZHxwp
        KRYlNzU2GioyPi0pMBk7IRP/2wBDAQcICAsJCxULCxUsHRkdLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCws
        LCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCz/wAARCAEKAdoDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEA
        AAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKB
        kaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlq
        c3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ
        2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREA
        AgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcY
        GRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaX
        mJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oA
        DAMBAAIRAxEAPwDyKiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKA
        CiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKA
        CiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKA
        CiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKA
        CiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKA
        CiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKA
        CiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKA
        CiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKA
        CiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKA
        CiiigAooooAKKKKACiiigAooooAKKACcAck8DFPkimiIEsboSMgSKykj1GaBXGUUUUDCiiigAooooAKK
        KKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKK
        KKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigDofBxtf7dtROqktHMLfeMgTb
        cqRnvgHFPuvE2sm5urfUoLS7hSeSN7W6t0wm1iCEdcOCPXNc/DNLbzQzwsUlhkSSNh1VlOQa6XV44tct
        4dbs41SchINRiQ9LgDA3A9N38B79PvD5+ynOTpcsHqtfVf8AAPNrUoKup1FdNWv2f6XGx6Z4f1uIjR3k
        s9TUFvsN3KHjm77YZSB+H6jvXOTQz28ssE8bxyxMUkRwQysOxBpqs8bKyMyOjBlZSVZWByCCOc11EUkP
        iqBbW4KR6/bxn7JcHCrfxoM+VL23jsai0a2iVpfg/wDgmrc8M7t3h+K/zX4o5WinSJJE8kciskkbMjqw
        wyspwQRTa5jt3CiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACii
        igAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAK6yw8LW9
        nbQ6v4ruH07Tnw9tZoAdU1EdcQwt91T3ZsfrmpfA5ie8FtZaQl7r80ubO6vW3afptuoBe6khA5ZeoyfT
        HPDWPEmhXVz/AGp4nfVJr/SILy2shdX0ipdak4YRzGwVU8vy1O4J2wDjIWgDFGnzeKNYli8OaP8AZrfb
        GqQrI7x28KAJ51zPIcDPVj+WT1mvPsPhi+gh0rVY9UlETw6wqxf8S6QkjMEbE/OvXJx9PRdyCXV/EVpN
        p2gWsPh7wlajOo3U0hRJAOGe9ujhnY/3Qe/PHIwNbufCcFqmk6FaG4MUyyXOtXYZbi6dQV228XRY+e4y
        ePTJcZOLuiZRU04yWhHNpdrqayXeg5YgF7jTHbN1bnuYc/fT0xyPSsm3W4S7t0QyQzrcRKpAIkjk3AAh
        euRUUUs0MiSwyPHLGdyPGxVlI7gjmultPGF3GyPf2VpeTRjCXJRI7pfQ+ZtIyP8Adroi6c3eT5X+H/AO
        WSrU4tQXMvN6/wDB/rcj8TxCUabquwJPeLPbX6KMKL2zfyZGH1/p71zdauq6uNQjs7aG3MFrameRVeQz
        SyTTtvkllkIGST7f/WyqivKMptx/ruXhYShSUZ+f3X0/AKKKKxOkKKKKACiiigAooooAKKKKACiiigAo
        oooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAo
        oooAKKKKACiiigAoor0/4feB/D+v6Vd6lqjTTMbqS0hhhlMQhEaKxdyvO47uB0x654APMK6bw/4I8TeJ
        I3nsoY4bRcgXN6zxQyMP4Y9qsx98Lj3ruvDvw68PDU/ENzqFw11YaRqclpbQylUiYRwxXBe6cYB27wpH
        AypzxxV3xV8StL0uJ9N8N+RcXaL5IuI1U2VooGAIgPlYjtj5R74xQAmieDdT0PS7myvH02zt7uRn17Vo
        byVriTT4wW+ywK8KBAejtv6Enrjbxet+K9D1fWbOO6s7hvCujxvDpunWTLB5xjXYjyZxgNgDjkLwOSd3
        HXN5fXks011czzyzOZJXmkZ2dickncagoA3Nc8S6lrfkwFYrPS7YbbLTbIeXaQKOh2jq3qT+mcVh0UUA
        FFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUA
        FFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUc9e1FABRRRQAUUUUAFeo+ELC3u9Ijg8MXet
        x61MoOsXS3L2unWJJYKZFKkOQPuBQSecso6eXVbttT1Wzt7y1tb25gtrwKLqKGV0SYLkAOFPPU0AeheN
        PEWj2Oh2/g/Q7trpo5AdXvVOVndWMsgMmTud3+ZzkjjGTn5fMqKKACiiigAooooAKKKKACiiigAooooA
        KKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooA
        KKKKACiiigAooooAKKKKAClQAsgY4BYAn0BPWkooA7bVNdTSbo6Vb6bZvZW0cSukq/60Ogfjt36kGsy4
        07TNVikvNGUwzLkyWLtncQNxEXfd1IHcDjptCa7A09loWsKwf7RZxWt0ydBPCNoz7kAg/wC7WZpUrQ31
        uwPBY5UkgSFRvVMgjkkDHPXFebQor2alTdpdfNre56Nas+dxqK8enkuli/B4V1ua1vr0xxiGwFs15GJF
        a5jW4Py4iHJPfGc89Kr2cGi2sbXOrG4mnWQpFpcSSQM+ADvubh1wqdsKCx/2etdV4NtL+7N/PeJNPFFP
        mKGeLVHVbx/meVRZwsNw6csv3vyn8aSQadpdvp4sIoZLudZEDWWowbYoSGZo2u5jyTtB/djgmvSPNejs
        ZKWWn6hBNqMkdk7fZljzEH0/QtHBQlElmx50swyPlXcSerPyBx3r3q7f6pqGpNEbmQeVCuy2t4VWK2tk
        /uwwxgIB68ZPck81SoGFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUU
        UUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUU
        UUAb+hX1s0dzouoNixv/APVyHH+j3PG1wT2PH5emazNQsLrTbqW0uFw6HKsB8siHo6+x/wA9Kp10VnqN
        hqdrHpetOUaIYsNQxl4e2yU91/z2yOWSdKTqRV091+q/U6otVYqnJ2a2f6P9CLQ9Yv7e+s4Zry7axmJt
        JoWnl8sRz/uyQu7AxwfwrP1S2ns9QvbWZ3doJWRWcliyH5lOT6gg1tQeHJ7W4hluY7u5gSVZIn0yKO4i
        uFB3KN/mArnvlfxqr4qlEuryNtCSi3thcIGDeXNsBKFl4yOAfpUQrRnX9x3TWvy/4cudKUKPvqzT0+Zh
        UUUV2nEFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRR
        QAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFAE8F7
        f2wK291cQqeoildAc+ymoWZmZmYlmYlmLEkknkkk0lFKyTuh3bVgooopiCiiigAooooAKKKKACiiigAo
        oooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAo
        oooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAo
        oooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAo
        oooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAo
        oooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAo
        oooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAo
        oooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAo
        oooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAo
        oooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoqW5/4+br/rvL/wCh
        GoqACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAK
        KKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoorp7b
        /j2tf+uEX/oAoA//2Q==
</value>
  </data>
</root>